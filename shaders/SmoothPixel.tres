[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

// only works while images have 'filter' enabled
vec4 texturePointSmooth(sampler2D img, vec2 uv, vec2 pixel_size) 
{
	vec2 ddx = dFdx(uv);
	vec2 ddy = dFdy(uv);
	vec2 lxy = sqrt(ddx*ddx + ddy*ddy);
	
	vec2 uv_pixels = uv / pixel_size;
	vec2 uv_pixels_floor = round(uv_pixels) - vec2(0.5f);
	vec2 uv_dxy_pixels = uv_pixels - uv_pixels_floor;
	
	uv_dxy_pixels = clamp((uv_dxy_pixels - vec2(0.5f)) * pixel_size * 0.15f / lxy + vec2(0.5f), 0.25f, 0.75f);
	return textureGrad(img, uv + uv_dxy_pixels * pixel_size, ddx, ddy);
}

void fragment() { COLOR = texturePointSmooth(TEXTURE, UV, TEXTURE_PIXEL_SIZE); }"

[resource]
shader = SubResource( 1 )
